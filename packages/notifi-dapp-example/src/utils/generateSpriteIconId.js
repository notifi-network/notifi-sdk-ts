const { readFileSync, writeFileSync } = require('fs');
const { resolve } = require('path');

// Paths
const SPRITE_PATH = resolve(__dirname, '../../public/icons/sprite.svg');
const OUTPUT_PATH = resolve(__dirname, '../assets/SpriteIconId.ts');

// Read the sprite SVG
const svgContent = readFileSync(SPRITE_PATH, 'utf-8');

// Extract all symbol ids
const symbolIdRegex = /<symbol\s+[^>]*id="([^"]+)"/g;
const ids = [];
let match;
while ((match = symbolIdRegex.exec(svgContent)) !== null) {
  ids.push(match[1]);
}

const warningMessage = `// Auto-generated by generateSpriteIconId.js. DO NOT EDIT MANUALLY.\n// Execute 'npm run generate:sprite-icon-id' to regenerate if the sprite file (/public/icons/sprite.svg) changes.\n\n`;
const spriteIdType = `export type SpriteIconId =\n  | ${ids.map((id) => `'${id}'`).join('\n  | ')};\n`;
const typeDef = `${warningMessage}${spriteIdType}`;

writeFileSync(OUTPUT_PATH, typeDef, 'utf-8');

console.info(`âœ¨ SpriteIconId type generated with ${ids.length} ids.`);
